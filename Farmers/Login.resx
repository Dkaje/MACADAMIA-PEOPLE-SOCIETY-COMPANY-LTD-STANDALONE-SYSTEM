<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UFSk8sleEI4AAAAASUVORK5CYII=
</value>
  </data>
</root>